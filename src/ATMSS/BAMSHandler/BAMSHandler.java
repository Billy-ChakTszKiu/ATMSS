package ATMSS.BAMSHandler;

import ATMSS.ATMSSStarter;
import AppKickstarter.AppKickstarter;

import java.util.logging.Logger;

public class BAMSHandler {

    String myUrl;
    Logger logMessage;

    public BAMSHandler(String myUrl) {
        this.myUrl = myUrl;
    }

    public BAMSHandler(String myUrl, Logger logMessage) {
        this.myUrl = myUrl;
        this.logMessage = logMessage;
    }

    public String getUrl() {
        return this.myUrl;
    }

    public Logger getLog() {
        return this.logMessage;
    }

    public void setLog(Logger log) {
        this.logMessage = log;
    }

    public String login(String cardNo,String pin)
            throws BAMSInvalidReplyException,
            java.io.IOException {
        //cardNo - The card number read from the inserted card
        //pin - The pin input by user

        //Return - Credential for successful login;"ERROR" for incorrect card number or pin
        return "";
    }

    public String getAccounts(String cardNo, String cred) throws BAMSInvalidReplyException,
            java.io.IOException {
        //cardNo - The card number read from the inserted card
        //cred - The credential generated by the login method

        //Return - Accounts accessible using this card (delimited by "/")
        return "";
    }

    public int withdraw(String cardNo, String accNo, String cred, String amoung) throws BAMSInvalidReplyException,
            java.io.IOException {
        //cardNo - The card number read from the inserted card
        //accNo - The account number which you want to withdraw from
        //cred - The credential generated by the login method
        //amount - The total amount that you want to withdraw

        //Return - Actual withdrawal amount; negative numbers for unsuccessful withdrawal
        return 0;
    }

    public Double deposit(String cardNo, String accNo, String cred, String amount) throws BAMSInvalidReplyException,
    java.io.IOException {
        //cardNo - The card number read from the inserted card
        //accNo - The account number which you want to withdraw from
        //cred - The credential generated by the login method
        //amount - The total amount that you want to deposit

        //Return - Actual deposit amount; negative numbers for unsuccessful deposit
        return 0.0;
    }

    public Double enquiry(String cardNo, String accNo, String cred) throws BAMSInvalidReplyException,
            java.io.IOException {
        //cardNo - The card number read from the inserted card
        //accNo - The account number which you want to withdraw form
        //cred - The credential generated by the login method

        //Return - Balance in the account for successful enquiry; negative numbers for unsuccessful enquiry
        return 0.0;
    }

    public Double transfer(String cardNo, String cred, String fromAcc, String toAcc, String amount) throws BAMSInvalidReplyException,
            java.io.IOException {
        //cardNo - The card number read from the inserted card
        //cred - The credential generated by the login method
        //fromAcc - The account number which you want to debit from
        //toAcc - The account number which you want to credit to
        //amount - The amount that you want to transfer

        //Return - Actual transferred amount for successful transfer; negative numbers for unsuccessful transfer
        return 0.0;
    }

}
